/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FundMe, FundMeInterface } from "../FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_addressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011ea380380620011ea83398181016040528101906200003791906200012a565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b61107e806200016c6000396000f3fe60806040526004361061007f5760003560e01c806354861af71161004e57806354861af714610135578063b60d428814610172578063be2693f01461017c578063e3978240146101865761008e565b80630d8e6e2c146100985780630ec3b027146100c35780631bf6132d146100ee5780633ccfd60b1461012b5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102e8565b6040516100ba91906109f1565b60405180910390f35b3480156100cf57600080fd5b506100d861038f565b6040516100e59190610a8b565b60405180910390f35b3480156100fa57600080fd5b5061011560048036038101906101109190610ae9565b6103b5565b60405161012291906109f1565b60405180910390f35b6101336103cd565b005b34801561014157600080fd5b5061015c60048036038101906101579190610b42565b6105a9565b6040516101699190610b7e565b60405180910390f35b61017a6101b1565b005b6101846105e8565b005b34801561019257600080fd5b5061019b610828565b6040516101a89190610b7e565b60405180910390f35b60006802b5e3af16b18800009050806101ec34600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661084e565b101561022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610bf6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027b9190610c45565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190610cb0565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610454576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561049a573d6000803e3d6000fd5b5060005b600180549050811015610546576000600182815481106104c1576104c0610cdd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053e90610d0c565b91505061049e565b50600067ffffffffffffffff81111561056257610561610d55565b5b6040519080825280602002602001820160405280156105905781602001602082028036833780820191505090505b50600190805190602001906105a6929190610931565b50565b600181815481106105b957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156106b5573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561073a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f0575b5050505050905060005b81518110156107c457600082828151811061076257610761610cdd565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107bc90610d0c565b915050610744565b50600067ffffffffffffffff8111156107e0576107df610d55565b5b60405190808252806020026020018201604052801561080e5781602001602082028036833780820191505090505b5060019080519060200190610824929190610931565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061085a8361088a565b90506000670de0b6b3a764000085836108739190610d84565b61087d9190610e0d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108d357600080fd5b505afa1580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b9190610eb6565b505050915050600a808261091f9190610f31565b6109299190610f31565b915050919050565b8280548282559060005260206000209081019282156109aa579160200282015b828111156109a95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610951565b5b5090506109b791906109bb565b5090565b5b808211156109d45760008160009055506001016109bc565b5090565b6000819050919050565b6109eb816109d8565b82525050565b6000602082019050610a0660008301846109e2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a51610a4c610a4784610a0c565b610a2c565b610a0c565b9050919050565b6000610a6382610a36565b9050919050565b6000610a7582610a58565b9050919050565b610a8581610a6a565b82525050565b6000602082019050610aa06000830184610a7c565b92915050565b600080fd5b6000610ab682610a0c565b9050919050565b610ac681610aab565b8114610ad157600080fd5b50565b600081359050610ae381610abd565b92915050565b600060208284031215610aff57610afe610aa6565b5b6000610b0d84828501610ad4565b91505092915050565b610b1f816109d8565b8114610b2a57600080fd5b50565b600081359050610b3c81610b16565b92915050565b600060208284031215610b5857610b57610aa6565b5b6000610b6684828501610b2d565b91505092915050565b610b7881610aab565b82525050565b6000602082019050610b936000830184610b6f565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610be0601b83610b99565b9150610beb82610baa565b602082019050919050565b60006020820190508181036000830152610c0f81610bd3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c50826109d8565b9150610c5b836109d8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c9057610c8f610c16565b5b828201905092915050565b600081519050610caa81610b16565b92915050565b600060208284031215610cc657610cc5610aa6565b5b6000610cd484828501610c9b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d17826109d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4a57610d49610c16565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610d8f826109d8565b9150610d9a836109d8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dd357610dd2610c16565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e18826109d8565b9150610e23836109d8565b925082610e3357610e32610dde565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5d81610e3e565b8114610e6857600080fd5b50565b600081519050610e7a81610e54565b92915050565b6000819050919050565b610e9381610e80565b8114610e9e57600080fd5b50565b600081519050610eb081610e8a565b92915050565b600080600080600060a08688031215610ed257610ed1610aa6565b5b6000610ee088828901610e6b565b9550506020610ef188828901610ea1565b9450506040610f0288828901610c9b565b9350506060610f1388828901610c9b565b9250506080610f2488828901610e6b565b9150509295509295909350565b6000610f3c82610e80565b9150610f4783610e80565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f8657610f85610c16565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fc357610fc2610c16565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561100057610fff610c16565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561103d5761103c610c16565b5b82820290509291505056fea2646970667358221220f79b39a4f55e44d99579d179c46ffcfc8f57b58b4a23afe0036d8d3c85980e5b64736f6c63430008090033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FundMe";
  }

  deploy(
    priceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeed, overrides || {}) as Promise<FundMe>;
  }
  getDeployTransaction(
    priceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeed, overrides || {});
  }
  attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }
  static readonly contractName: "FundMe";
  public readonly contractName: "FundMe";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
